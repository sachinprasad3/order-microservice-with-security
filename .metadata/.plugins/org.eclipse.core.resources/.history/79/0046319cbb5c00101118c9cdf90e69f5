package com.payment_service.controller;

import java.time.LocalDateTime;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.payment_service.client.NotificationClient;
import com.payment_service.client.OrderClient;
import com.payment_service.dto.NotificationRequestDto;
import com.payment_service.dto.OrderDto;
import com.payment_service.entity.Payment;
import com.payment_service.servise.PaymentService;
import com.payment_service.util.ApiResponse;

@RestController
@RequestMapping("/api/v1/payments")
public class PaymentController {
	
	@Autowired
	private PaymentService paymentService;
	
	@Autowired
	private OrderClient orderClient;
	
	@Autowired
	private NotificationClient notificationClient;
	
	@PostMapping
	public ResponseEntity<ApiResponse> makePayment(@RequestParam Long orderId, @RequestParam String mode){
		
		OrderDto orderDto = orderClient.getOrderById(orderId).getData();
		
		if (orderDto == null) {
			return new ResponseEntity<ApiResponse>(new ApiResponse(true, "Order not found", null), HttpStatus.NOT_FOUND);
		}
		
		Payment payment = new Payment();
		payment.setOrderId(orderId);
		payment.setPaymentMode(mode);
		payment.setPaymentDate(LocalDateTime.now());
		payment.setPaymentStatus("PAID");
		Payment pmt = paymentService.create(payment);
		
		//Notification
		
		NotificationRequestDto notificationRequestDto = new NotificationRequestDto(orderDto.getUserId(), 
										"Your payment of â‚¹" + orderDto.getTotalPrice() + " for Order ID " + orderId + " is successful!");
		
		notificationClient.sendNotification(notificationRequestDto);
		
		return new ResponseEntity<ApiResponse>(new ApiResponse(false, "success", pmt), HttpStatus.CREATED);
		
	}
	
	@GetMapping("/{id}")
	public ResponseEntity<ApiResponse> getPaymentById(@PathVariable Long id){
		return new ResponseEntity<ApiResponse>(new ApiResponse(false, "success", paymentService.getById(id)), HttpStatus.OK);
	}
	
	
}
